{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerId","setInterval","setState","console","log","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","renameClock","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAVP,gCAaE,SAAmBS,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAhBhF,kCAoBE,WACEE,cAAcT,KAAKC,WArBvB,oBAwBE,WACE,IAAQJ,EAASG,KAAKJ,MAAdC,KAER,OACE,8BACGA,OA7BT,GAA2Ba,IAAMC,WC2DlBC,G,kNAzDbhB,MAAQ,CACNiB,gBAAgB,EAChBN,KAAM,G,EAGRO,YAAc,WACR,EAAKlB,MAAMiB,gBACb,EAAKV,SAAS,CACZI,KAAMQ,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAK5B,WAAU,IAAD,OACP,EAAiCjB,KAAKJ,MAA9BiB,EAAR,EAAQA,eAAgBN,EAAxB,EAAwBA,KAExB,OACE,yBAAKW,UAAU,OACb,4BACGL,GAAc,sBAAmBN,IAEpC,2BACG,iBACAM,GAAkB,kBAAC,EAAD,CAAON,KAAMP,KAAKJ,MAAMW,QAE7C,4BACEY,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CACZU,gBAAgB,MAJtB,cAWA,4BACEM,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CACZU,gBAAgB,MAJtB,cAUA,4BACEM,KAAK,SACLC,QAASpB,KAAKc,aAFhB,wB,GA/CUJ,IAAMC,YCAxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a08f3762.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n    // eslint-disable-next-line\n      console.log(`The clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <span>\n        {time}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropsTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 1,\n  }\n\n  renameClock = () => {\n    if (this.state.isClockVisible) {\n      this.setState({\n        name: Math.floor(Math.random() * 1000),\n      });\n    }\n  }\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {isClockVisible && `React clock ${name}`}\n        </h1>\n        <p>\n          {'Current time: '}\n          {isClockVisible && <Clock name={this.state.name} />}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: true,\n            });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: false,\n            });\n          }}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.renameClock}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}