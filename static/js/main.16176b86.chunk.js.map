{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerId","setInterval","setState","console","log","clearInterval","React","Component","App","isClockVisible","name","prevProps","prevState","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,yBAChC,OARP,gCAWE,WAEEK,QAAQC,IAAIL,KAAKJ,MAAMC,QAb3B,kCAgBE,WACES,cAAcN,KAAKC,WAjBvB,oBAoBE,WACE,IAAQJ,EAASG,KAAKJ,MAAdC,KAER,OACE,8BACGA,OAzBT,GAA2BU,IAAMC,WCgElBC,G,kNA7Dbb,MAAQ,CACNc,gBAAgB,EAChBC,KAAM,G,wDAGR,SAAmBC,EAAWC,GACxBA,EAAUF,OAASX,KAAKJ,MAAMe,MAEhCP,QAAQC,IAAR,qCAA0CQ,EAAUF,KAApD,eAA+DX,KAAKJ,MAAMe,S,oBAI9E,WAAU,IAAD,OACP,EAAiCX,KAAKJ,MAA9Bc,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,KAExB,OACE,yBAAKG,UAAU,OACb,kDACkBH,IAElB,2CAEG,IACAD,EAAiB,kBAAC,EAAD,MAAY,MAEhC,4BACEK,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CACZO,gBAAgB,MAJtB,cAWA,4BACEK,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CACZO,gBAAgB,MAJtB,cAUA,4BACEK,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CACZQ,KAAMM,KAAKC,MAAsB,IAAhBD,KAAKE,cAJ5B,wB,GA/CUZ,IAAMC,YCAxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.16176b86.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    // eslint-disable-next-line\n    console.log(this.state.time);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <span>\n        {time}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 1,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.name !== this.state.name) {\n    // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.name} to ${this.state.name}`);\n    }\n  }\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`React clock ${name}`}\n        </h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible ? <Clock /> : null}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: true,\n            });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: false,\n            });\n          }}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              name: Math.floor(Math.random() * 1000),\n            });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}